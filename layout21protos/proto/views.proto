
//! 
//! # vlsir Multi-View Cell Library 
//! 
//! Schema for the `Cell` mutli-representation of a piece of hardware. 
//! View include IO-abstracts (`Interface`), physical abstracts `Abstrakt`, 
//! and layout implementations (`raw.Cell`). 
//! 

syntax = "proto3";
package vlsir.views;

import "utils.proto";
import "raw.proto";
import "circuit.proto";


// # Library
// 
// A collection of related `Cells` and asssociated metadata. 
message Library {
  // Library Name / Domain 
  string domain = 1;
  // Distance Units
  vlsir.raw.Units units = 2;
  // Cell Definitions
  repeated Cell cells = 3; 

  // Author Information
  vlsir.utils.AuthorMetadata author = 20;
}

// # Cell 
// A multi-view representation of a piece of hardware.
message Cell {
  // Cell Name
  string name = 1;
  // IO Interface
  Interface interface = 10;
  // Circuit Module 
  vlsir.circuit.Module module = 11;
  // Physical Abstract
  Abstract abstract = 12;
  // Physical Layout Implementation
  vlsir.raw.Cell layout = 13;
}

// # Interface View 
// Defines the logical IO of a `Cell`, using `circuit` port-types.
message Interface {
  // Cell Name
  string name = 1;
  // Port List 
  repeated vlsir.circuit.Port ports = 10;
}

// # Abstract Layout View 
// 
// Defines the physical interface to a [Cell], including ports and internal blockages, 
// omitting internal implementation details.
//
message Abstract {
  // Cell Name
  string name = 1;
  // Outline
  vlsir.raw.Polygon outline = 2;
  // Ports 
  repeated AbstractPort ports = 4;
  // Blockages
  repeated vlsir.raw.LayerShapes blockages = 5;
}

// # Abstract Port
// Combination of a net and set of shapes
message AbstractPort {
  // Port Name
  string net = 1;
  // Shapes, grouped by layer 
  repeated vlsir.raw.LayerShapes shapes = 2; 
}

